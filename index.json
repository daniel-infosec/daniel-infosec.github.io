[{"categories":null,"contents":"Addressed pretty significant page load performance issue founde in larger deployments. Eliminates uses of intensive backend query, replacing it with an asynchronous API call against a lucene index. This change reduces page load from from 2+ minutes to nearly instant, with an incredibly responsive UI.\n","permalink":"https://daniel-infosec.github.io/projects/contributions/deploy-triggers/","tags":["Java","jQuery","REST APIs","Bamboo","JSON"],"title":"Atlassian Deployment Triggers"},{"categories":null,"contents":" Update 1 - I\u0026rsquo;m clarifying the definition of Advanced Persistent Threats (APTs) and Financially Motivated Actors (FMAs). I combined the two groups in the previous version. The content and focus of the discussion primarily centers on FMAs. APTs and FMAs can overlap in terms of TTPs, capabilities, personnel, countries, etc. What distinguishes them is motivation. FMAs, as their name implies, are financially motivated. APTs can have a number of motivations including financial, political, etc.\nTwitter is a complicated social networking platform. Then again, which platform isn\u0026rsquo;t? I\u0026rsquo;m fairly new to tweeting, but I\u0026rsquo;ve already found that it can be a tremendous resource when it comes to receiving up-to-date information on new techniques, upcoming talks, or nifty vulnerabilities. What I haven\u0026rsquo;t found it useful for is having discussions, especially those surrounding a controversial idea. This has manifested in my feed over the past month with the discussion around the release of Offensive Security Tools, primarily ignited by Andrew Thompson (@QW5kcmV3).\nhttps://twitter.com/ItsReallyNick/status/1171145995050205185/photo/1\nOffensive Security Tools Before you read anymore, please read Andrew\u0026rsquo;s blog post on the Unrestricted Release of Offensive Security Tools as I\u0026rsquo;ll be using verbiage defined in that article. (Based on some of the discussions on Twitter where people have straw manned Microsoft\u0026rsquo;s operating system as an Offensive Security Tool (OST), I have confidence that not many people have actually read the article.) Andrew\u0026rsquo;s primary argument is that the unrestricted release of OST is causing more harm than good to the world. He\u0026rsquo;s passionately championed this idea on Twitter, pointing to data such as that available from his employer (FireEye/Mandiant) about actual breaches. Reaction to his argument has ranged from agreement to vitriolic outrage. (I do concede that some of the negative feedback may be due to his tone, which has not always been the friendliest.) Opposition has accused him of gatekeeping, exaggerating the magnitude of the problem, or just being plain wrong. Others have argued that this is a solved problem and wonder why it\u0026rsquo;s even being discussed. Later in this article, I will attempt to address and refute some of those arguments.\nSafe Spaces The second article I\u0026rsquo;d like you to read is, on the surface, unrelated to the discussion at hand. It\u0026rsquo;s a recently published piece by James Hatch titled My semester with the snowflakes. In the article, James discusses some of the assumptions he made about the students of Yale University prior to his first semester at the institution and how these assumptions were summarily shattered. One of these assumptions regarded the term \u0026ldquo;safe space\u0026rdquo;. James had long regarded the term to mean a place to discuss ideas without having one\u0026rsquo;s feelings hurt. He learned the truth is quite the opposite. \u0026ldquo;What she [his fellow student meant by \u0026lsquo;safe space\u0026rsquo; was that she was happy to be in an environment where difficult subjects can be discussed openly, without the risk of disrespect or harsh judgement.\u0026rdquo; Throughout the rest of this post, I\u0026rsquo;d like to adopt the same definition.\nTwitter is Not a Safe Space At this point, I\u0026rsquo;m hoping you can see where I\u0026rsquo;m going with this section. The recent tone of the dialogue surrounding Andrew\u0026rsquo;s argument shows me that we are more likely moving further from a solution than towards one. Individuals on both sides of the argument have been quick to judge each other\u0026rsquo;s motives and credentials and have sometimes done so with a healthy dollop of disrespect. Twitter is not a \u0026ldquo;safe space\u0026rdquo;. Your most likely reaction to that sentence is \u0026ldquo;well, no shit\u0026rdquo;. Why, then, is so much of this discussion happening on Twitter? It clearly is not the place to discuss a topic that is clearly controversial. It is true that one can reach a global audience instantly; however, it encourages short, witty responses instead of a deep dialogue. Where then, do we turn? Conferences are another common vehicle for presenting ideas. Unfortunately, they too do not lend themselves to the idea of having a dialogue. Conferences are primarily unidirectional communication: a speaker lectures an audience. There may be time for questions, but its brevity does not encourage in depth dialogue. Additionally, conferences artificially restrict themselves to those with the resources (time, money, influence) to attend.\nAt this point in time, I am not aware of a currently existing solution for having such discussions. During my time in the Air Force, teams would sponsor \u0026ldquo;working groups\u0026rdquo; with attendees from a variety of squadrons with different perspectives to gather and discuss complicated and controversial ideas. Such a solution in the commercial space would require significant sponsorship and buy-in from employers who would lose valuable resources for a period of time as they worked on a problem affecting a community. But it\u0026rsquo;s an idea.\nGatekeeping Another term I want to define as I\u0026rsquo;ve seen it come up quite a bit is \u0026ldquo;gatekeeping\u0026rdquo;. I\u0026rsquo;ll go with the Urban Dictionary definition which is \u0026ldquo;when someone takes it upon themselves to decide who does or does not have access or rights to a community or identity.\u0026rdquo; I\u0026rsquo;ll address gatekeeping later in this article, but I wanted to clarify the definition I\u0026rsquo;ll be using.\nArguments Against the Restriction of OST Release At this point in time, I\u0026rsquo;ve seen a number of arguments against Andrew\u0026rsquo;s position. I\u0026rsquo;ll be addressing each of these in their own section.\n The problem of restricting OST is too difficult. We have already solved this problem. The problem is blown out of proportion. There are two components to this.  FMAs aren\u0026rsquo;t using public OSTs. If OST wasn\u0026rsquo;t released, FMAs would develop their own.  Restricting the release of OST will gatekeep the offensive security community.  Logical Fallacies In addressing Andrew\u0026rsquo;s arguments, I\u0026rsquo;ve seen quite a few logical fallacies. I\u0026rsquo;ll address some examples I\u0026rsquo;ve seen here, so that others can be aware. For those who have used these arguments, I would encourage you to review the list and think to yourself if you\u0026rsquo;re committing one of these fallacies when engaging in debates.\nStraw Man Fallacy  Windows is used by attackers - therefore you\u0026rsquo;re proposing we restrict the release of Operating Systems. This is obviously ludicrous, therefore, the argument to restrict OST is invalid.\n Here, someone is misrepresenting Andrew\u0026rsquo;s argument by providing an easy to refute example. It is \u0026ldquo;superficially similar but ultimately not equal version of [Andrew\u0026rsquo;s] real stance\u0026rdquo;.\nBandwagon Fallacy  The majority of the community thinks restricting OST is wrong. Therefore, your proposition is invalid.\n Just because the majority agrees on something, doesn\u0026rsquo;t mean it\u0026rsquo;s correct.\nThe False Dilemma Fallacy  Either we restrict all tools that can be used for attackers (including Empire, BloodHound, and SysInternals) or we restrict none of them.\n Again, this misrepresents Andrew\u0026rsquo;s argument. If you read his earlier article and his recent postings, there is a spectrum of a tool classes that could be considered for restriction. It\u0026rsquo;s not an all-or-nothing argument.\nAnecdotal Evidence Fallacy  I haven\u0026rsquo;t seen attackers use publicly released OSTs; therefore, it\u0026rsquo;s not a problem.\n A personal anecdote does not provide a preponderance of evidence to refute an argument.\nTexas Sharpshooter Fallacy,  APT XYZ, Government ABC, and FMA 123 do not use OST. Therefore, your argument that these tools are a problem is invalid.\n This argument is cherry picking data and ignores the other adversaries that are using OST as part of their activities.\nPersonal Incredulity Fallacy  I don\u0026rsquo;t understand the various aspects of OST release. It\u0026rsquo;s too complicated and can\u0026rsquo;t be correct.\n One\u0026rsquo;s ability to understand an argument does not affect the validity of the claim.\n\u0026ldquo;No True Scotsman\u0026rdquo; Fallacy  No real hacker would argue for the restriction of OST. Hackers break down systems - they don\u0026rsquo;t create them!\nNo true APT or FMA would use OSTs.\n This is one of my favorite logical fallacies. It relies on universal generalizations to \u0026ldquo;inaccurately deflect counterexamples\u0026rdquo;.\nThe Problem of Restricting OST is too Difficult This argument supposes that Andrew is correct with regards to the problem of releasing OSTs in that attackers are using them, and it is negatively impacting the security community. They contend that setting up a system to control the release of OST is too difficult. \u0026ldquo;Pandora\u0026rsquo;s box has been opened.\u0026rdquo; Therefore, it is not worth pursuing solutions.\nWhile I do agree with these individuals that the problem is difficult, I disagree with their conclusion that it is not worth pursuing a solution. I argue that, in information security, our responsibility is to reduce the number of attacks and how costly those attacks are as much as possible. If the data shows that OST is being used on a high number of high-impact attacks, we thus have a responsibility to reduce that as much as possible.\n\u0026ldquo;Just because something is hard doesn\u0026rsquo;t mean it\u0026rsquo;s impossible.\u0026rdquo; - Lysa TerKeurst\nWe Have Already Solved the Problem I\u0026rsquo;ve seen this from a number of users replying to Andrew\u0026rsquo;s article. Their comments are something along the lines of \u0026ldquo;Imagine talking about the release of OST in 2019\u0026hellip;\u0026rdquo; or \u0026ldquo;Are we really talking about this gain?\u0026rdquo;. I have two responses.\n I would consider this gatekeeping. You\u0026rsquo;re creating an old guard and saying \u0026ldquo;we have previously decided the answer. You, not a member of the old guard, have no right to question our previous decisions.\u0026rdquo; Instead of being excluding, be open. Explain your decisions and why those decisions were made. Invite people to the conversation. Things change. While your decisions may have been correct when they were made, we cannot conclude that every decision will remain true for eternity. We must continuously question our assumptions and pressure test our decisions to see if they continue to stand up. It may have been that economies have changed and more attackers are relying on OST than before, and thus this conversation is worth revisiting.  APTs and FMAs Aren\u0026rsquo;t Using OST The data speaks for itself. Very few organizations have access to the volume and quality of data that Andrew has. While I\u0026rsquo;m trying to avoid the \u0026ldquo;appeal to authority\u0026rdquo; fallacy, I do believe Andrew when he states APT33 is using Empire, Metasploit, and Mimikatz. I address the logical fallacy regarding \u0026ldquo;no true APT\u0026rdquo; earlier. I do not believe this argument holds weight, but I would appreciate a fresh perspective if you disagree.\nIf OST Wasn\u0026rsquo;t Released, FMAs Would Just Develop Their Own This is my favorite argument because I think it is the most valid. I\u0026rsquo;ll decompose it into the various sub-arguments. Let us hold that this argument is valid. From that, people who hold this position draw a number of conclusions.\n Since FMAs would just develop their own OSTs, I would rather they use publicly released ones so that I can develop signatures from tools I am aware of. Since FMAs would just develop their own OSTs, the harm I do in releasing a OST is minimal since the capability would exist anyways. (If you have another reason that I missed, please reach out and I\u0026rsquo;ll update the article.)  The first argument supposes that organizations as a whole will be able to improve their security. Don\u0026rsquo;t forget the anecdotal evidence fallacy. Just because your organization is equipped to quickly respond and detect new threats does not mean the majority (or even 25%) of organizations have those capabilities. I think one thing the security industry doesn’t yet universally understand is a VAST majority of companies can barely manage basic security compliance. I agree with GossiTheDog based on my years of working with a number of organizations as well as from anecdotes I\u0026rsquo;ve heard from peers in the industry. That does not mean I\u0026rsquo;m correct. I believe the correct approach would be for a survey of a large number of organizations across a variety of sizes and verticals to assess if they have the capability to respond to new tools and signatures as well as how quickly they deploy them. I foresee that very few will have this capability.\nThe second argument contends that these tools would exist anyways, so there is no harm in releasing them. The first argument is partially correct - FMAs would invest in developing OST if they were not publicly released. However, they would HAVE to invest in developing OST if these tools were not released. As Andrew states in his article, adversaries, just like blue teams, have finite resources. If they invest in developing these capabilities, it inherently means that they\u0026rsquo;re not investing in other areas. The relationship between information security and risk management is inextricable. Our goal, as security professionals, should be to make it as difficult as possible for adversaries to achieve their goals. We can do that by not only making our defenses better but by reducing their capabilities.\nRestricting the Release of OST Will Gatekeep the Offensive Security Community This group argues that releasing OST helps with inclusion for the offensive security community. They argue, from what I can tell, that restricting these tools creates artificial barriers where those with the tools arbitrarily decide who and who does not have access to these capabilities.\nWhat follows is probably my most controversial opinion. I agree with this argument, but I also do not believe that this is a bad thing. I believe that offensive security professionals do not currently exist. To quote Wikipedia, \u0026ldquo;Major milestones which may mark an occupation being identified as a profession include:\nan occupation becomes a full-time occupation the establishment of a training school the establishment of a university school the establishment of a local association the establishment of a national association of professional ethics the establishment of state licensing laws\u0026rdquo;\nWhile one could argue that some certifications (such as CISSP) can define an information security professional, offensive security does not currently meet these definitions. The bar to declare yourself an offensive security professional, start a company, and begin selling services is very low.\nWhen we look at some examples of professions, we may begin to notice a trend: medicine, accounting, law, architecture, etc. Mistakes are not tolerated in these professions. People could die or go to jail (or both). I believe that information security (to include offensive security) meets this same bar. Incorrect and misinformed judgements and decisions can result in disastrous effects. I am not proposing that \u0026ldquo;the haves\u0026rdquo; wall themselves off in an ivory castle from the \u0026ldquo;have nots\u0026rdquo;. I am saying that gatekeeping in and of itself is not bad especially when it is done to protect the quality of work, so consumers have confidence in the product and services they are procuring. An organization purchasing the services of an MSSP or Red Team should have confidence that the company and its employees have adequate experience and capabilities to provide the services they are describing. There also does not need to be just one gate. Just like in medicine there are a variety of paths, certifications, schools, and specialties, so too could a system exist in information security. Just as some medicines are over-the-counter and some are \u0026ldquo;gatekept\u0026rdquo; by prescribing physicians, so too could certain tools be restricted to those who have shown the technical and ethical capacity to responsible exercise them.\nIf you agree or disagree, I\u0026rsquo;d really appreciate thoughts and discussions on this point.\nYou Didn\u0026rsquo;t Address my Argument Please reach out and I\u0026rsquo;ll update my article accordingly.\nFinal Thoughts We can\u0026rsquo;t move towards a solution for a problem until we agree that there\u0026rsquo;s a problem. Andrew clearly has data that shows that tools such as PowerShell Empire, Responder, etc. are being used in real-world breaches and costing companies time and money. If you rush to conclude that that\u0026rsquo;s an acceptable cost, then I encourage you to reconsider - not that you\u0026rsquo;re wrong, but that you refuse to even have your beliefs challenge. We are engineers, scientists, operators, analysts, managers, leaders, and executives. But we are not zealots and no idea should beyond question.\nFinally, we are on the same side. Offensive security or defensive security - if you consider yourself a white hat, we have the same objective: making the world a more secure place. Please keep that in mind when discussing tough ideas with your peers. Mutural respect goes a long way.\n","permalink":"https://daniel-infosec.github.io/blog/opensourceredteamtooling/","tags":["Offensive Security Tools","OST","Twitter","Safe Space"],"title":"Adding to the Dialogue - On the Release of Offensive Security Tools (OST)"},{"categories":null,"contents":"On a recent Purple Team engagement, I was accessing the client\u0026rsquo;s Splunk cloud instance. Being my normal typo-filled self, I fat fingered the URL and went to clieent.splunkcloud.com instead of the correct client.splunkcloud.com. Instead of being redirected to the login portal, I received a DNS resolution error, fixed the typo, and moved on. A little while later, I was thinking about the typo again and wondered how this information leakage could be utilized by an attacker.\nTo backup a little, a key part of an offensive campaign (and many say the most critical part) is recon. During this phase, the Red Team or malicious actor tries to obtain as much information about the target as possible. Key items of interest include organizational charts, employee lists, email formats, external address space, and technologies utilized by the organization. During this phase, the attacker wants to limit their interaction with the target as much as possible in order to avoid tipping off defenders. Most attackers avoid active scanning or interaction with the target during this phase.\nSo back to my story. I wanted to answer two questions: 1. Could this technique be applied to identify other organizations that are using Splunk Cloud? 2. What other SaaS applications could I enumerate in this way?\nTo answer the first question, I pulled a CSV of the Fortune 500 companies and ran a very rudimentary bash loop to curl sites based on the company names.\nwhile read p; do echo $p; curl $p.splunkcloud.com; done \u0026lt; ~/f500.txt \u0026gt; ~/f500_splunkcloud.txt\nSurprisingly, this returned 29 results. I then built a better wordlist for the first 150 companies and compared that with what was returned for the top 150 from the basic list. As an example, for \u0026ldquo;Capital One Financial\u0026rdquo;, my first list only contained \u0026ldquo;capitalonefinancial\u0026rdquo;. In the second list, I also included \u0026ldquo;capitalone\u0026rdquo;. This yieled 14 companies in the top 150 utilizing slunkcloud.com whereas the basic search had returned only 9 in the top 150. My basic search of the Fortune 500 yielded 29 companies using splunkcloud.com, though I\u0026rsquo;m sure that would return more results if I built a better wordlist.\nMy next goal was to see if this worked for other SaaS applications. In a few minutes of digging, I identified that Okta, Zoom, Atlassian, Slack, Box, and Zendesk also offer the same opportunities for open source recon (I\u0026rsquo;m intentionally avoiding the word \u0026ldquo;vulnerability\u0026rdquo; as I don\u0026rsquo;t believe this qualifies). A few of these sites were a bit more difficult to figure out. As an example, entering an invalid Okta url will still land you on a valid sign-in page. Fortunately, most organization upload their logo when making an Okta login page and we can grep for logoText and identify which of these pages are actually valid.\nwhile read p; do echo $p; curl -L $p.okta.com | grep logoText; done \u0026lt; ~/top150.txt \u0026gt; top150_okta.txt\nUtilizing my same top 150 list with some adjustments, I foudn that 31 of the top 150 Fortune 500 companies are using Okta. (Some false positives may be in there.)\nFor Slack, I simply had to look for the phrase \u0026ldquo;There\u0026rsquo;s been a glitch\u0026rdquo; which was returned on invalid subdomains. My list yielded quite a few false positives so I had to grep based on email addresses to ensure I had the right organization.\nwhile read p; do echo $p; curl -L $p.slack.com | tr -d '\\n' | grep -v \u0026quot;There's been a glitch\u0026quot; ; done \u0026lt; ~/top150.txt \u0026gt; top150_slack.txt cat top150_slack.txt | grep -o 'data-team-email-domains-formatted.\\{0,30\\}'  I\u0026rsquo;d like to give a special shout-out to the folks at 1password.com. As far as I could tell, valid and invalid login pages presented the exact same content.\nSo what should you take away from this? As an attacker, build a list of SaaS applications to check prior to each engagement and add that to your playbook. As a defender, unless the vendor makes changes, I don\u0026rsquo;t see many options for preventing this type of recon. I\u0026rsquo;d be happy to receive emails if you have ideas. Make sure to monitor for logins to all your SaaS applications. Utilize a robust IAM solution. You could also consider setting up honey services. Say your a Microsoft Teams organization (some do exist, trust me), you could register for a basic Slack account and monitor for attempted logins. I haven\u0026rsquo;t done the research, but I\u0026rsquo;d bet that most failed logins would likely be a part of an advanced campaign as opposed to merely bots.\nIf you have experience in this area (either defending against this or using it on your Red Teams), I\u0026rsquo;d be happy to hear your stories!\nAll opinions in this article are my own.\nUpdate: I felt like this work needed a POC and I wanted to practice some basic Go, so I coded this up! I added a few more SaaS applications (SalesForce and Adobe Creative Cloud) and removed Zendesk as I felt there were too many false posities. Check it out https://github.com/daniel-infosec/subsaas.\n","permalink":"https://daniel-infosec.github.io/blog/saassubdomainrecon/","tags":["OSINT","SaaS","Security"],"title":"SaaS Reconnaissance Utilizing Subdomains"},{"categories":null,"contents":"We\u0026rsquo;ve had a couple of people reach out about how to get started with our automation. This is part one of a multipart series where we\u0026rsquo;ll cover how to get started with our automation. In this post, I show how to get the automation installed, a payload up and running, and executing a basic module. You can check out the blog here or watch the YouTube video.\n","permalink":"https://daniel-infosec.github.io/blog/gettingstartedwithautomation/","tags":["Adversary Emulation","Security","MITRE ATT\u0026CK","metasploit","automation"],"title":"Getting Started with Praetorian’s ATT\u0026CK™ Automation"},{"categories":null,"contents":"I wrote a blog post on Praetorian\u0026rsquo;s website explaining why we chose to benchmark detection and response to MITRE ATT\u0026amp;CK™. You can check out the blog here.\n","permalink":"https://daniel-infosec.github.io/blog/attackbenchmark/","tags":["Adversary Emulation","Security","MITRE ATT\u0026CK"],"title":"Why Praetorian Benchmarks to MITRE ATT\u0026CK™ and Why You Should Too"},{"categories":null,"contents":"This tool demonstrates what I believe will be the future of Command and Control (C2) for Red Teams and potentially Advanced Persistent Threats (APTs). With Domain Fronting slowly being killed by major CDNs and security teams getting better at looking for unusual sites (I still love that detection for new sites encrypted with LetsEncrypt certificates), Red Teams will look for alternate ways to hide their traffic. What better way than to utilize features of common sites that users are visiting anyways?\nThis work was inspired by my coworker\u0026rsquo;s (Josh Abraham) work to demonstrate alternative forms of Command and Control. Some of his POCs included demonstrations using Slack and ICMP for C2. While these techniques aren\u0026rsquo;t revolutionary, the simplicity of the POC and how hard it was to detect confirmed my suspicion that the future of C2 is going to be tunneling traffic via features of well-known applications.\nIn addition, there was a recent Twitter post from @randomuserid that got me thinking about what other sites besides Slack could be utilized. So, I browsed through the Alexa top sites and started seeing what features could be abused to facilitate C2 traffic. The first few were all linked in @randomuserid\u0026rsquo;s Google sheet, so I moved onto wikipedia.org. It didn\u0026rsquo;t take me long to stumble onto the Wikipedia API page.\nWhen determining what API to use, I had two goals: I wanted my traffic to be private (so no public pages) and I wanted to be able to send a not insignificant amount of data. I started with the options API as it seemed that setting options for the current user (perhaps steganography via a user profile picture?) would be a plausible solution. Browsing the list of user options, one immediately stood out: userjs-arbitraryKeyName. After a bit of experimentation, it proved trivial to set the value of this option. In addition, testing revealed that the maximum size was 65535 characters - more than enough for a useful C2 channel.\nAs an attacker, I would be hesitant to use this method as my primary C2 channel. A well-positioned defender could potentially notice the spike in traffic to Wikipedia. Instead, I would use this similar to the way that Red Teams utilize C2 over DNS - a backup channel in case the primary method is blocked.\nAs a defender, I would continue with standard methods for identifying unusual spikes in traffic. Play with the POC and see how much data has to be transferred to cause a spike in traffic to Wikipedia. If you\u0026rsquo;re doing HTTPS interception, it\u0026rsquo;s unlikely that standard users are using the Wikipedia API. All that being said, I believe this technique would be incredibly difficult to detect for your average Blue Team. I\u0026rsquo;m a firm believer in focusing security on the endpoint, and demonstrations like this continue to confirm that belief.\n","permalink":"https://daniel-infosec.github.io/blog/wikipediac2/","tags":["C2","Adversary Emulation","Security","Demo"],"title":"Demonstrating the Future of Command and Control with Wikipedia"},{"categories":null,"contents":"This talk looked at Liberty Mutual’s transformation to Continuous Integration, Continuous Delivery, and DevOps. For a large, heavily regulated industry, this task can not only be daunting, but viewed by many as impossible. Often, organizations try to reduce the friction through micro-fixes, but Eddie’s team asked how to change the culture to reduce the friction and concluded with the following final points:\n Don’t mandate DevOps. Give employees the chance to master their discipline with examples to set and follow. Favor deep end-to-end accomplishments over broad but incremental steps forward. Focus on taking the right teams far before encouraging broad adoption. Centralize the platforms and tools that your teams shouldn’t be thinking about. Provide foundational services/commodities and let teams stay on purpose. Incorporate contributions from everyone; don’t stifle autonomy. Stay open to new ways of working. Challenge security policies, but respect intentions. Find new ways to enforce concerns without abandoning precaution.    ","permalink":"https://daniel-infosec.github.io/publications/alldaydevops/","tags":["DevOps","Continuous Integration","Continuous Delivery","CI/CD pipelines","agile","Culture"],"title":"Organically DevOps: Building Quality and Security into the Software Supply Chain at Liberty Mutual"},{"categories":null,"contents":"Shields.io is a massive library of badges that can be inserted into project README\u0026rsquo;s or websites displaying various statuses (code coverage, health, version, etc). Support for docker was missing the current build health, and was a pretty trivial addition.\n","permalink":"https://daniel-infosec.github.io/projects/contributions/shields-docker/","tags":["Docker","Rest APIs","JavaScript","node.js","JSON"],"title":"Added Docker Build Status Badge to shields.io"},{"categories":null,"contents":"While adding Structured Data to a client\u0026rsquo;s website I found some example JSON that was invalid. Simple contribution to cleanup the user documentation providing syntactically valid JSON documents.\n","permalink":"https://daniel-infosec.github.io/projects/contributions/schema-org/","tags":["JSON"],"title":"Schema.org Structured Data documentation fixes"},{"categories":null,"contents":"BOSH (Bosh Outer SHell) \u0026ldquo;\u0026hellip; is an open source tool for release engineering, deployment, lifecycle management, and monitoring of distributed systems.\u0026rdquo; And it\u0026rsquo;s amazingly powerful. This examples uses BOSH to provision an Alassian vendor app running on JDK along with the support Postgres database and agents to support it. The releases manages the health of services and will automatically provision, start/stop processes across the various services.\n","permalink":"https://daniel-infosec.github.io/projects/creations/bosh-agents/","tags":["DevOps","BOSH","Java","Atlassian Ecosystem","monit","python","xml/xslt","bash/shell","REST APIs"],"title":"BOSH release for Bamboo \u0026 Remote Agents"},{"categories":null,"contents":"Multiple plugins used by thousands of teams that provide enhanced functionality of Atlassian’s core products (primarily JIRA and Bamboo) to enrich CI/CD capabilities, DevOps automation, or productivity. Functionality spans user interface, web services and persistence.\n","permalink":"https://daniel-infosec.github.io/projects/creations/marketplace/","tags":["Java","Spring","REST APIs","Javascript","Atlassian Developer Ecosystem","Bamboo","JIRA","Bitbucket","Confluence","DevOps"],"title":"Atlassian Marketplace Plugins"},{"categories":null,"contents":"Provides required dependencies and additional utilities to simplify and codify the process of building, testing and delivering Atlassian plugins all the way to the live marketplace. Executes integration/AUT level tests against all stated compatible versions for the productUploads generated artifact to Atlassian marketplaceProvides corresponding metadata indicating version, release notes, and compatibility\n","permalink":"https://daniel-infosec.github.io/projects/creations/docker-marketplace/","tags":["Docker","Maven","Java","Python","REST APIs","Bash/Shell"],"title":"Docker image for Bitbucket CI/CD Pipelines  \"shipit\""},{"categories":null,"contents":" This file exists solely to respond to /search URL with the related search layout template.\nNo content shown here is rendered, all content is based in the template layouts/page/search.html\nSetting a very low sitemap priority will tell search engines this is not important content.\nThis implementation uses Fusejs, jquery and mark.js\nInitial setup Search depends on additional output content type of JSON in config.toml\n[outputs] home = [\u0026quot;HTML\u0026quot;, \u0026quot;JSON\u0026quot;]  Searching additional fileds To search additional fields defined in front matter, you must add it in 2 places.\nEdit layouts/_default/index.JSON This exposes the values in /index.json i.e. add category\n... \u0026quot;contents\u0026quot;:{{ .Content | plainify | jsonify }} {{ if .Params.tags }}, \u0026quot;tags\u0026quot;:{{ .Params.tags | jsonify }}{{end}}, \u0026quot;categories\u0026quot; : {{ .Params.categories | jsonify }}, ...  Edit fuse.js options to Search static/js/search.js\nkeys: [ \u0026quot;title\u0026quot;, \u0026quot;contents\u0026quot;, \u0026quot;tags\u0026quot;, \u0026quot;categories\u0026quot; ]  ","permalink":"https://daniel-infosec.github.io/search/","tags":null,"title":"Search Results"}]