<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Catscrdl</title>
    <link>https://catscrdl.io/</link>
    <description>Recent content on Catscrdl</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 28 Feb 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://catscrdl.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Detection as Code: A Maturity Framework</title>
      <link>https://catscrdl.io/blog/detectionascodematurity/</link>
      <pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/blog/detectionascodematurity/</guid>
      <description>Detection as Code: A Maturity Framework Introduction In the ever-evolving landscape of cybersecurity, the methodologies and tools we rely on are continually advancing. One of the latest trends is Detection as Code (DaC), which promises to revolutionize threat detection by integrating software engineering practices into security operations. Having worked in an organization that practices DaC for several years, I&amp;rsquo;ve come to realize that it&amp;rsquo;s not simply a matter of adopting DaC or not.</description>
    </item>
    
    <item>
      <title>There are Only Two Rules</title>
      <link>https://catscrdl.io/blog/thereareonlytworules/</link>
      <pubDate>Fri, 22 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/blog/thereareonlytworules/</guid>
      <description>Intro In the field of detection engineering, understanding and applying the right frameworks is crucial for effectively identifying and responding to threats. Mental models provide a structured way of categorizing and approaching the myriad of security alerts and anomalies we face daily. These models help us dissect and understand the behavior of potential threats, allowing for a more targeted and effective defense strategy. In this blog post, I&amp;rsquo;ll explain how I use one mental model to clearly classify every detection rule into one of two categories and how that helps shape the decision of what kind of detections I build.</description>
    </item>
    
    <item>
      <title>Building Resilient Detection Suppressions</title>
      <link>https://catscrdl.io/blog/buildingresilientsuppressions/</link>
      <pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/blog/buildingresilientsuppressions/</guid>
      <description>Intro Raise your hand if you&amp;rsquo;ve worked on suppressing a false positive for a detector and then the very next day, it&amp;rsquo;s back in your &amp;ldquo;fix&amp;rdquo; queue with another false positive. I&amp;rsquo;d expect almost everyone who&amp;rsquo;s worked in detection engineering for any period of time has their hand raised or is nodding along. Why does this happen? Well, sometimes the detector itself isn&amp;rsquo;t very good and it&amp;rsquo;s alerting on a lot of benign behavior.</description>
    </item>
    
    <item>
      <title>How to Write an Actionable Alert</title>
      <link>https://catscrdl.io/blog/howtowriteanactionablealert/</link>
      <pubDate>Mon, 03 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/blog/howtowriteanactionablealert/</guid>
      <description>Intro &amp;ldquo;If a tree falls in a forest and no one is around to hear it, does it make a sound?&amp;rdquo;
This mantra about possibly non-existent trees very much applies to detection engineers. If you write a great rule to detect malicious behavior, but no one (or nothing) acts upon the alert, did you really catch the threat actor? Or worse, an analyst acts on the alert but responds incorrectly. In this article, I will cover the importance of not only writing solid detections, but also solid alerts.</description>
    </item>
    
    <item>
      <title>Real Time vs Scheduled Query Detections - A Guide For Detection Engineers</title>
      <link>https://catscrdl.io/blog/streamingvsscheduling/</link>
      <pubDate>Mon, 15 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/blog/streamingvsscheduling/</guid>
      <description>Most modern SIEMs offer 2 primary methods for running their queries: real time rules and scheduled queries. Each option offers a variety of pros and cons that you should consider as you develop your detection. Before we dive into that, let&amp;rsquo;s clarify what we mean by each.
Definitions A real time rule, often called a streaming rule, runs on a stream of data. Essentially, as the data enters the SIEM, each data point will get processed against the rules that correspond with that kind of data.</description>
    </item>
    
    <item>
      <title>A Shmoo&#39;s Guide to DC</title>
      <link>https://catscrdl.io/blog/ashmoosguidetodc/</link>
      <pubDate>Sat, 26 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/blog/ashmoosguidetodc/</guid>
      <description>Some of these recommendtions work best for Shmoocon in March vs Shmoocon in the cold of January.
Orienting Yourself
Below is a map of the neighborhoods. The gold star is the Hilton hotel. When you hear someone reference a neighborhood, hopefully this helps. The most common ones you&amp;rsquo;ll probably hear are Adams Morgan (Admo), Dupont Circle (Dupont), U St, The Mall, and Capitol Hill.
Getting Around
Metro
 Dupont station is going to be closest and that&amp;rsquo;ll get you to the red line.</description>
    </item>
    
    <item>
      <title>Azure Flow Log Analysis</title>
      <link>https://catscrdl.io/blog/azureflowloganalysis/</link>
      <pubDate>Fri, 16 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/blog/azureflowloganalysis/</guid>
      <description>Intro Disclaimer I currently work at Snowflake and use the product on a daily basis for log analysis and threat detection. At the time of this writing, that probably adds bias to my article.
At Snowflake, we&amp;rsquo;re a multi-cloud environment. As part of the threat detection team, it&amp;rsquo;s my job to ensure that we&amp;rsquo;re monitoring. One of my tasks was to monitor our Azure flow logs for unusual behavior. Information on Azure Network Security Group (NSG) flow logs can be found at this link.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://catscrdl.io/about/</link>
      <pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/about/</guid>
      <description>I&amp;rsquo;m a security engineer at Snowflake who also enjoys computers, coffee, cats, Muay Thai, and BJJ</description>
    </item>
    
    <item>
      <title>Regarding SMS 2FA</title>
      <link>https://catscrdl.io/blog/regardingsms2fa/</link>
      <pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/blog/regardingsms2fa/</guid>
      <description>I think an important question that Tavis either explicitly or accidentally omitted is &amp;ldquo;for whom&amp;rdquo;. I am not sure why he did not include this as it&amp;rsquo;s a critical component to his argument. If Tavis is stating that &amp;ldquo;SMS 2FA is ineffective for an enterprise&amp;rdquo;, then I would agree. The threat model that he is operating from is that an organization is being explicitly targeted by a motivated (though not necessarily extremely capable) attacker, who only needs minimal access to cause great harm.</description>
    </item>
    
    <item>
      <title>Adding to the Dialogue - On the Release of Offensive Security Tools (OST)</title>
      <link>https://catscrdl.io/blog/opensourceredteamtooling/</link>
      <pubDate>Tue, 24 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/blog/opensourceredteamtooling/</guid>
      <description>Update 1 - I&amp;rsquo;m clarifying the definition of Advanced Persistent Threats (APTs) and Financially Motivated Actors (FMAs). I combined the two groups in the previous version. The content and focus of the discussion primarily centers on FMAs. APTs and FMAs can overlap in terms of TTPs, capabilities, personnel, countries, etc. What distinguishes them is motivation. FMAs, as their name implies, are financially motivated. APTs can have a number of motivations including financial, political, etc.</description>
    </item>
    
    <item>
      <title>Getting Started with Praetorian’s ATT&amp;CK™ Automation</title>
      <link>https://catscrdl.io/blog/gettingstartedwithautomation/</link>
      <pubDate>Fri, 10 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/blog/gettingstartedwithautomation/</guid>
      <description>Blog link: Getting Started with Praetorian&amp;rsquo;s ATT&amp;amp;CK Automation</description>
    </item>
    
    <item>
      <title>Why Praetorian Benchmarks to MITRE ATT&amp;CK™ and Why You Should Too</title>
      <link>https://catscrdl.io/blog/attackbenchmark/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/blog/attackbenchmark/</guid>
      <description>Blog link: Why Praetorian Benchmarks to MITRE ATT&amp;amp;CK™ and Why You Should Too</description>
    </item>
    
    <item>
      <title>Demonstrating the Future of Command and Control with Wikipedia</title>
      <link>https://catscrdl.io/blog/wikipediac2/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/blog/wikipediac2/</guid>
      <description>This work was inspired by my coworker&amp;rsquo;s (Josh Abraham) work to demonstrate alternative forms of Command and Control. Some of his POCs included demonstrations using Slack and ICMP for C2. While these techniques aren&amp;rsquo;t revolutionary, the simplicity of the POC and how hard it was to detect confirmed my suspicion that the future of C2 is going to be tunneling traffic via features of well-known applications.
In addition, there was a recent Twitter post from @randomuserid that got me thinking about what other sites besides Slack could be utilized.</description>
    </item>
    
    <item>
      <title>Open Source SaaS Reconnaissance Utilizing Subdomains</title>
      <link>https://catscrdl.io/blog/opensourcesubdomainrecon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://catscrdl.io/blog/opensourcesubdomainrecon/</guid>
      <description>On a recent Purple Team engagement, I was accessing the client’s Splunk cloud instance. Being my normal typo-filled self, I fat fingered the URL and went to clieent.splunkcloud.com instead of the correct client.splunkcloud.com. Instead of being redirected to the login portal, I received a DNS resolution error, fixed the typo, and moved on. A little while later, I was thinking about the typo again and wondered how this information leakage could be utilized by an attacker.</description>
    </item>
    
  </channel>
</rss>